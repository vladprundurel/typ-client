!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("gauge-chart")):"function"==typeof define&&define.amd?define("angular-gauge-chart",["exports","@angular/core","gauge-chart"],e):e((t=t||self)["angular-gauge-chart"]={},t.ng.core,t.gaugeChart)}(this,function(t,e,n){"use strict";var a=function(){function t(){}return t.prototype.ngOnInit=function(){this.name&&(this.nameFont||(this.nameFont=""+Math.round(this.canvasWidth/15)),this.nameMargin=""+Math.round(+this.nameFont/4)),this.bottomLabel&&(this.bottomLabelFont||(this.bottomLabelFont=""+Math.round(this.canvasWidth/10)),this.bottomLabelMargin="-"+this.bottomLabelFont),this.optionsCheck()&&(this.element=this.gaugeArea.nativeElement,this.drawChart()),this.oldOptions=JSON.parse(JSON.stringify(this.options))},t.prototype.optionsCheck=function(){return null==this.canvasWidth?(console.warn("gauge-chart warning: canvasWidth is not specified!"),!1):null==this.needleValue?(console.warn("gauge-chart warning: needleValue is not specified!"),!1):(null==this.centralLabel&&(this.centralLabel=""),!0)},t.prototype.ngDoCheck=function(){this.areEqual(this.options,this.oldOptions)||(this.drawChart(!0),this.oldOptions=JSON.parse(JSON.stringify(this.options)))},t.prototype.areEqual=function(t,e){return JSON.stringify(t)===JSON.stringify(e)},t.prototype.drawChart=function(t){void 0===t&&(t=!1),t&&this.gaugeChart.removeGauge(),this.options.centralLabel=this.centralLabel,this.gaugeChart=n.gaugeChart(this.element,this.canvasWidth,this.options),this.gaugeChart.updateNeedle(this.needleValue)},t.prototype.ngOnChanges=function(t){t.needleValue&&!t.needleValue.firstChange&&(this.needleValue=t.needleValue.currentValue,this.gaugeChart.updateNeedle(this.needleValue)),t.centralLabel&&!t.centralLabel.firstChange&&(this.centralLabel=t.centralLabel.currentValue,this.drawChart(!0))},t.decorators=[{type:e.Component,args:[{selector:"rg-gauge-chart",template:'<div class="gauge-chart" [style.width.px]="canvasWidth">\n  <span\n    [style.font-size.px]="nameFont"\n    [style.margin-bottom.px]="nameMargin">\n    {{name}}\n  </span>\n  <div #gaugeArea></div>\n  <span\n    class="gauge-chart__label"\n    [style.font-size.px]="bottomLabelFont"\n    [style.margin-top.px]="bottomLabelMargin">\n    {{bottomLabel}}\n  </span>\n</div>\n',styles:["*{font-family:Roboto,'Helvetica Neue',sans-serif}.gauge-chart{display:flex;flex-direction:column;text-align:center}.gauge-chart__label{font-weight:700}"]}]}],t.propDecorators={gaugeArea:[{type:e.ViewChild,args:["gaugeArea",{static:!0}]}],canvasWidth:[{type:e.Input}],needleValue:[{type:e.Input}],centralLabel:[{type:e.Input}],options:[{type:e.Input}],wrapOptions:[{type:e.Input}],name:[{type:e.Input}],nameFont:[{type:e.Input}],bottomLabel:[{type:e.Input}],bottomLabelFont:[{type:e.Input}]},t}(),o=function(){function t(){}return t.decorators=[{type:e.NgModule,args:[{imports:[],declarations:[a],exports:[a]}]}],t}();t.GaugeChartComponent=a,t.GaugeChartModule=o,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=angular-gauge-chart.umd.min.js.map